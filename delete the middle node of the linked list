class Solution {
public:
    ListNode* deleteMiddle(ListNode* head) {
        
        if (!head || !head->next) {
            return nullptr;
        }

        
        ListNode* slow = head;
        ListNode* fast = head;
        ListNode* prev = nullptr;

        
        while (fast && fast->next) {
            fast = fast->next->next;
            prev = slow;
            slow = slow->next;
        }

        
        prev->next = slow->next;

       
        return head;
    }
};
Input
head =
[1,3,4,7,1,2,6]
  Output
[1,3,4,1,2,6]
